name: Merge

on:
  pull_request:
    branches:
      - develop
      - staging
      - production
    types: [closed]
      
jobs:
  Install:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    container:
      image: node:16
    steps:
      - uses: actions/checkout@v3
      - name: Install packages
        run: yarn install --frozen-lockfile
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
  Build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    needs: Install
    container:
      image: node:16
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Test code
        run: yarn run build
  # Docker image
  Deploy_To_Dev:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged == true 
      && 
      ( github.event.pull_request.base.ref == 'develop') 
    needs: Build
    environment: 
      name: develop
      url: https://dev.xxxxx.com
    concurrency: develop
    container:
      image: node:16
    steps:
      - uses: actions/checkout@v3
      - name: Deploying code
        run: echo "Deploying to ${{ github.event.pull_request.base.ref }}"
  Deploy_To_Staging:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged == true 
      && 
      ( github.event.pull_request.base.ref == 'staging') 
    needs: Build
    environment: 
      name: staging
      url: https://staging.xxxxx.com
    concurrency: staging
    container:
      image: node:16
    steps:
      - uses: actions/checkout@v3
      - name: Deploying code
        run: echo "Deploying to ${{ github.event.pull_request.base.ref }}"
  Deploy_To_Prod:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged == true 
      && 
      ( github.event.pull_request.base.ref == 'production') 
    needs: Build
    environment: 
      name: production
      url: https://xxxxx.com
    concurrency: production
    container:
      image: node:16
    steps:
      - uses: actions/checkout@v3
      - name: Deploying code
        run: echo "Deploying to ${{ github.event.pull_request.base.ref }}"      
  # Notify:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: node:16
  #   steps:
  #     - name: send telegram message
  #       uses: appleboy/telegram-action@master
  #       with:
  #         to: ${{ secrets.TELEGRAM_TO }}
  #         token: ${{ secrets.TELEGRAM_TOKEN }}
  #         message: |
  #           ${{ github.actor }} created commit:
  #           Commit message: ${{ github.event.commits[0].message }}
            
  #           Repository: ${{ github.repository }}
            
  #           See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
