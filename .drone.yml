kind: pipeline
type: docker
name: Install

steps:
  - name: install
    image: node:16
    volumes:
      - name: node_modules
        path: /drone/src/node_modules
    commands:
      - yarn install --frozen-lockfile

trigger:
  event: 
    - push
    - pull_request

volumes:
  - name: node_modules
    host:
      path: /tmp/drone/cache/node_modules

---
kind: pipeline
type: docker
name: Tests Push

steps:
  - name: tests push
    image: node:16
    volumes:
      - name: node_modules
        path: /drone/src/node_modules
    commands:
      - yarn run test

depends_on:
  - Install

trigger:
  event: 
    - push
  branch: 
    exclude:
      - develop
      - staging
      - production

volumes:
  - name: node_modules
    host:
      path: /tmp/drone/cache/node_modules
---
kind: pipeline
type: docker
name: Tests Pull Request

steps:
  - name: tests pull request
    image: node:16
    volumes:
      - name: node_modules
        path: /drone/src/node_modules
    commands:
      - yarn run test

trigger:
  event: 
    - pull_request
  branch: 
    include:
      - develop
      - staging
      - production

depends_on:
  - Install

volumes:
  - name: node_modules
    host:
      path: /tmp/drone/cache/node_modules
---
kind: pipeline
type: docker
name: Build

steps:
  - name: build
    image: node:16
    volumes:
      - name: node_modules
        path: /drone/src/node_modules
      - name: build
        path: /drone/src/build
    commands:
      - yarn run build

trigger:
  event: 
    - push
  branch: 
    include:
      - develop
      - staging
      - production

depends_on:
  - Install

volumes:
  - name: node_modules
    host:
      path: /tmp/drone/cache/node_modules  
  - name: build
    host:
      path: /tmp/drone/cache/build
---
kind: pipeline
type: docker
name: Create docker image

clone:
  disable: true

steps:
  - name: publish image
    image: plugins/docker
    volumes:
      - name: build
        path: /drone/src/build
      - name: docker
        path: /var/run/docker.sock
    settings:
      registry: rg.fr-par.scw.cloud/agence-public
      repo: rg.fr-par.scw.cloud/agence-public/create-react-app
      tags: ${DRONE_COMMIT_BRANCH}
      force_tag: true
      username:
        from_secret: DOCKER_REGISTRY_USERNAME
      password:
        from_secret: DOCKER_REGISTRY_PASS

trigger:
  event: 
    - push
  branch: 
    include:
      - develop
      - staging
      - production

depends_on:
  - Build

volumes:
  - name: build
    host:
      path: /tmp/drone/cache/build
  - name: docker
    host:
      path: /var/run/docker.sock
---
# ADD PROMOTE PIPELINE HERE
#---
kind: pipeline
type: docker
name: Deploy to ${DRONE_COMMIT_BRANCH}

clone:
  disable: true

steps:
  - name: Deploy
    image: appleboy/drone-ssh
    settings:
      host:
        - 51.15.222.159
      key:
        from_secret: SSH_KEY
      passphrase:
        from_secret: SSH_KEY_PASS
      port: 22
      command_timeout: 2m
      script:
        - docker service update --image rg.fr-par.scw.cloud/agence-public/create-react-app:${DRONE_COMMIT_BRANCH} test-drone-ci_nginx-${DRONE_COMMIT_BRANCH}

trigger:
  branch:
    include:
      - develop
      - staging
      - production
  event:
    - promote
---
kind: pipeline
type: docker
name: Notify

clone:
  disable: true

steps:
  - name: send push telegram
    image: appleboy/drone-telegram
    settings:
      token: 
        from_secret: TELEGRAM_BOT_TOKEN
      to: 
        from_secret: TELEGRAM_BOT_CANAL
      message: >
        {{#success build.status}}✅{{else}}❌{{/success}} [Push]

        Drone: 
            build: {{build.number}}
            link: {{build.link}}
        Github:
            author: ${DRONE_COMMIT_AUTHOR}
            branch: ${DRONE_COMMIT_BRANCH}
            message: ${DRONE_COMMIT_MESSAGE}
    when:
      event: 
        - push  

  - name: send pr telegram
    image: appleboy/drone-telegram
    settings:
      token: 
        from_secret: TELEGRAM_BOT_TOKEN
      to: 
        from_secret: TELEGRAM_BOT_CANAL
      message: >
        {{#success build.status}}✅{{else}}❌{{/success}} [Pull Request]

        Drone: 
            build: {{build.number}}
            link: {{build.link}}
    when:
      event: 
        - pull_request

  - name: send promote telegram
    image: appleboy/drone-telegram
    settings:
      token: 
        from_secret: TELEGRAM_BOT_TOKEN
      to: 
        from_secret: TELEGRAM_BOT_CANAL
      message: >
        {{#success build.status}}✅{{else}}❌{{/success}} [Promote]

        Drone: 
            build: {{build.number}}
            link: {{build.link}}
        Link:
            https://.....fr
    when:
      event: 
        - promote

depends_on:
  - "Tests Push"
  - "Tests Pull Request"
  - "Deploy to ${DRONE_COMMIT_BRANCH}"
  - "Create docker image"

trigger:
  status:
    - success
    - failure
  event: 
    - push
    - promote
    - pull_request