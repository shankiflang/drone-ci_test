kind: pipeline
type: docker
name: Build

steps:
  - name: install
    image: node:16
    volumes:
      - name: cache
        path: /drone/src/node_modules
    commands:
      - npm ci
    depends_on:
      - clone
    when:
      event:
        - push
        - pull_request

  - name: tests
    image: node:16
    volumes:
    - name: cache
      path: /drone/src/node_modules
    commands:
      - npm test
    depends_on:
      - install
    when:
      event:
        - pull_request

  - name: build
    image: node:16
    volumes:
      - name: cache
        path: /drone/src/node_modules
    commands:
      - npm run build
    depends_on:
      - tests
    when:
      event:
        - push

  - name: publish image dev
    image: plugins/docker
    settings:
      registry: rg.fr-par.scw.cloud/agence-public
      repo: rg.fr-par.scw.cloud/agence-public/create-react-app_test
      auto_tag: true
      auto_tag_suffix: dev
      username:
        from_secret: DOCKER_REGISTRY_USERNAME
      password:
        from_secret: DOCKER_REGISTRY_PASS
    depends_on:
      - build
    when:
      branch:
        - develop
      event:
        - push

#  ADD DEPLOYMENT TO DEV

  - name: publish image staging
    image: plugins/docker
    settings:
      registry: rg.fr-par.scw.cloud/agence-public
      repo: rg.fr-par.scw.cloud/agence-public/create-react-app_staging
      auto_tag: true
      auto_tag_suffix: staging
      username:
        from_secret: DOCKER_REGISTRY_USERNAME
      password:
        from_secret: DOCKER_REGISTRY_PASS
    depends_on:
      - build
    when:
      branch:
        - staging
      event:
        - push

# ADD DEPLOYMENT TO STAGING

  - name: publish image prod
    image: plugins/docker
    settings:
      registry: rg.fr-par.scw.cloud/agence-public
      repo: rg.fr-par.scw.cloud/agence-public/create-react-app_prod
      auto_tag: true
      auto_tag_suffix: prod
      username:
        from_secret: DOCKER_REGISTRY_USERNAME
      password:
        from_secret: DOCKER_REGISTRY_PASS
    depends_on:
      - build
    when:
      branch:
        - production
      event:
        - push

trigger:
  branch:
    - develop
    - staging
    - production
  event: 
      - push
      - pull_request

volumes:
  - name: cache
    host:
      path: /tmp/drone/node_modules

---
kind: pipeline
type: docker
name: Notify

clone:
  disable: true

steps:
  - name: send telegram
    image: appleboy/drone-telegram
    settings:
      token: 
        from_secret: TELEGRAM_BOT_TOKEN
      to: 
        from_secret: TELEGRAM_BOT_CANAL
      message: >
        {{#success build.status}}✅{{else}}❌{{/success}} Build {{build.status}} - build: {{build.number}}
        {{build.link}}

depends_on:
  - Build

trigger:
  branch:
    - develop
    - staging
    - production
  status:
    - success
    - failure
  event: 
    - push