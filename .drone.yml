kind: pipeline
type: docker
name: Install

steps:
  - name: install
    image: node:16
    volumes:
      - name: node_modules
        path: /drone/src/node_modules
    commands:
      - yarn install --frozen-lockfile
    depends_on:
      - clone

trigger:
  event: 
    - push
    - pull_request

volumes:
  - name: node_modules
    host:
      path: /tmp/drone/cache/node_modules

---
kind: pipeline
type: docker
name: Tests

steps:
  - name: tests push
    image: node:16
    volumes:
      - name: node_modules
        path: /drone/src/node_modules
    commands:
      - yarn run test
    when:
      event: 
        - push
      branch: 
        exclude:
          - develop
          - staging
          - production

  - name: tests pull_request
    image: node:16
    volumes:
      - name: node_modules
        path: /drone/src/node_modules
    commands:
      - yarn run test
    when:
      event: 
        - pull_request
      branch: 
        include:
          - develop
          - staging
          - production

depends_on:
  - Install

volumes:
  - name: node_modules
    host:
      path: /tmp/drone/cache/node_modules
---
kind: pipeline
type: docker
name: Build

steps:
  - name: build
    image: node:16
    volumes:
      - name: node_modules
        path: /drone/src/node_modules
      - name: build
        path: /drone/src/build
    commands:
      - yarn run build

trigger:
  event: 
    - push
  branch: 
    include:
      - develop
      - staging
      - production

depends_on:
  - Install

volumes:
  - name: node_modules
    host:
      path: /tmp/drone/cache/node_modules  
  - name: build
    host:
      path: /tmp/drone/cache/build
---
kind: pipeline
type: docker
name: Create docker image

clone:
  disable: true

steps:
  - name: publish image
    image: plugins/docker
    volumes:
      - name: build
        path: /drone/src/build
    settings:
      registry: rg.fr-par.scw.cloud/agence-public
      repo: rg.fr-par.scw.cloud/agence-public/create-react-app
      tags: ${DRONE_COMMIT_BRANCH}
      force_tag: true
      username:
        from_secret: DOCKER_REGISTRY_USERNAME
      password:
        from_secret: DOCKER_REGISTRY_PASS

trigger:
  event: 
    - push
  branch: 
    include:
      - develop
      - staging
      - production

depends_on:
  - Build

volumes:
  - name: build
    host:
      path: /tmp/drone/cache/build
---
# ADD PROMOTE PIPELINE HERE
#---
kind: pipeline
type: docker
name: Deploy to ${DRONE_COMMIT_BRANCH}

clone:
  disable: true

steps:
  - name: Deploy
    image: appleboy/drone-ssh
    settings:
      host:
        - 51.15.222.159
      key:
        from_secret: SSH_KEY
      passphrase:
        from_secret: SSH_KEY_PASS
      port: 22
      command_timeout: 2m
      script:
        - docker service update --image rg.fr-par.scw.cloud/agence-public/create-react-app:${DRONE_COMMIT_BRANCH} test-drone-ci_nginx-${DRONE_COMMIT_BRANCH}

trigger:
  branch:
    include:
      - develop
      - staging
      - production
  event:
    - promote
---
kind: pipeline
type: docker
name: Notify

clone:
  disable: true

steps:
  - name: send telegram
    image: appleboy/drone-telegram
    settings:
      token: 
        from_secret: TELEGRAM_BOT_TOKEN
      to: 
        from_secret: TELEGRAM_BOT_CANAL
      message: >
        [Push] {{#success build.status}}✅{{else}}❌{{/success}} Build {{build.status}} - 
        Drone: 
            build: {{build.number}}
            link: {{build.link}}
        Github:
            author: {{DRONE_COMMIT_AUTHOR}}
            branch: {{DRONE_COMMIT_AUTHOR}}
            message: {{DRONE_COMMIT_MESSAGE}}
    when:
      event: 
        - push  

  - name: send telegram
    image: appleboy/drone-telegram
    settings:
      token: 
        from_secret: TELEGRAM_BOT_TOKEN
      to: 
        from_secret: TELEGRAM_BOT_CANAL
      message: >
        [PullRequest] {{#success build.status}}✅{{else}}❌{{/success}} Build {{build.status}}
        Drone: 
            build: {{build.number}}
            link: {{build.link}}
    when:
      event: 
        - pull_request

  - name: send telegram
    image: appleboy/drone-telegram
    settings:
      token: 
        from_secret: TELEGRAM_BOT_TOKEN
      to: 
        from_secret: TELEGRAM_BOT_CANAL
      message: >
        [Promote] {{#success build.status}}✅{{else}}❌{{/success}} Build {{build.status}}
        Drone: 
            build: {{build.number}}
            link: {{build.link}}
        Link:
            https://.....fr
    when:
      event: 
        - promote

trigger:
  status:
    - success
    - failure
  event: 
    - push
    - promote
    - pull_request































#   - name: tests
#     image: node:16
#     commands:
#       - npm test
#     depends_on:
#       - install

# trigger:
#   branch:
#     exclude:
#       - develop
#       - staging
#       - production
#   event: 
#     - push

# volumes:
#   - name: cache
#     host:
#       path: /tmp/drone/cache/npm
# ---
# kind: pipeline
# type: docker
# name: Validate Pull Request

# steps:
#   - name: install
#     image: node:16
#     volumes:
#       - name: cache
#         path: /drone/src/.npm
#     commands:
#       - npm ci --cache .npm
#     depends_on:
#       - clone

#   - name: tests
#     image: node:16
#     commands:
#       - npm test
#     depends_on:
#       - install

# trigger:
#   branch:
#     - develop
#     - staging
#     - production
#   event: 
#     - pull_request

# volumes:
#   - name: cache
#     host:
#       path: /tmp/drone/cache/npm
# ---
# kind: pipeline
# type: docker
# name: Validate ${DRONE_COMMIT_BRANCH} Push

# steps:
#   - name: install
#     image: node:16
#     volumes:
#       - name: cache
#         path: /drone/src/.npm
#     commands:
#       - npm ci --cache .npm
#     depends_on:
#       - clone

#   - name: build
#     image: node:16
#     commands:
#       - npm run build
#     depends_on:
#       - install

#   - name: publish image
#     image: plugins/docker
#     settings:
#       registry: rg.fr-par.scw.cloud/agence-public
#       repo: rg.fr-par.scw.cloud/agence-public/create-react-app
#       tags: ${DRONE_COMMIT_BRANCH}
#       force_tag: true
#       username:
#         from_secret: DOCKER_REGISTRY_USERNAME
#       password:
#         from_secret: DOCKER_REGISTRY_PASS
#     depends_on:
#       - build

#                     # PROMOTE ONLY FOR DEV AND STAGING

# trigger:
#   branch:
#     - develop
#     - staging
#     - production
#   event: 
#     - pull_request

# volumes:
#   - name: cache
#     host:
#       path: /tmp/drone/cache/npm
# ---
# kind: pipeline
# type: docker
# name: Deploy to ${DRONE_COMMIT_BRANCH}

# clone:
#   disable: true

# steps:
#   - name: Deploy
#     image: appleboy/drone-ssh
#     settings:
#       host:
#         - 51.15.222.159
#       key:
#         from_secret: SSH_KEY
#       passphrase:
#         from_secret: SSH_KEY_PASS
#       port: 22
#       command_timeout: 2m
#       script:
#         - docker service update --image rg.fr-par.scw.cloud/agence-public/create-react-app:${DRONE_COMMIT_BRANCH} test-drone-ci_nginx-${DRONE_COMMIT_BRANCH}

# trigger:
#   branch:
#     - develop
#     - staging
#     - production
#   event:
#     - promote
# ---
# kind: pipeline
# type: docker
# name: Notify

# clone:
#   disable: true

# steps:
#   - name: send telegram
#     image: appleboy/drone-telegram
#     settings:
#       token: 
#         from_secret: TELEGRAM_BOT_TOKEN
#       to: 
#         from_secret: TELEGRAM_BOT_CANAL
#       message: >
#         [Push] {{#success build.status}}✅{{else}}❌{{/success}} Build {{build.status}} - 
#         Drone: 
#             build: {{build.number}}
#             link: {{build.link}}
#         Github:
#             author: {{DRONE_COMMIT_AUTHOR}}
#             branch: {{DRONE_COMMIT_AUTHOR}}
#             message: {{DRONE_COMMIT_MESSAGE}}
#     when:
#       event: 
#         - push  

#   - name: send telegram
#     image: appleboy/drone-telegram
#     settings:
#       token: 
#         from_secret: TELEGRAM_BOT_TOKEN
#       to: 
#         from_secret: TELEGRAM_BOT_CANAL
#       message: >
#         [PullRequest] {{#success build.status}}✅{{else}}❌{{/success}} Build {{build.status}}
#         Drone: 
#             build: {{build.number}}
#             link: {{build.link}}
#     when:
#       event: 
#         - pull_request

#   - name: send telegram
#     image: appleboy/drone-telegram
#     settings:
#       token: 
#         from_secret: TELEGRAM_BOT_TOKEN
#       to: 
#         from_secret: TELEGRAM_BOT_CANAL
#       message: >
#         [Promote] {{#success build.status}}✅{{else}}❌{{/success}} Build {{build.status}}
#         Drone: 
#             build: {{build.number}}
#             link: {{build.link}}
#         Link:
#             https://.....fr
#     when:
#       event: 
#         - promote

# depends_on:
#   - Validate Push
#   - Validate Pull Request
#   - Deploy to ${DRONE_COMMIT_BRANCH}

# trigger:
#   status:
#     - success
#     - failure
#   event: 
#     - push
#     - promote
#     - pull_request